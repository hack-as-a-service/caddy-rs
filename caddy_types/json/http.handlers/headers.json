{"type": "struct", "type_name": "github.com/caddyserver/caddy/v2/modules/caddyhttp/headers.Handler", "struct_fields": [{"key": "request", "value": {"type": "struct", "type_name": "github.com/caddyserver/caddy/v2/modules/caddyhttp/headers.HeaderOps", "struct_fields": [{"key": "add", "value": {"type": "map", "type_name": "net/http.Header", "map_keys": {"type": "string"}, "elems": {"type": "array", "elems": {"type": "string"}, "doc": "Adds HTTP headers; does not replace any existing header fields."}, "doc": "A Header represents the key-value pairs in an HTTP header.\n\nThe keys should be in canonical form, as returned by\nCanonicalHeaderKey.\n"}, "doc": "Adds HTTP headers; does not replace any existing header fields."}, {"key": "set", "value": {"type": "map", "type_name": "net/http.Header", "map_keys": {"type": "string"}, "elems": {"type": "array", "elems": {"type": "string"}, "doc": "Sets HTTP headers; replaces existing header fields."}, "doc": "A Header represents the key-value pairs in an HTTP header.\n\nThe keys should be in canonical form, as returned by\nCanonicalHeaderKey.\n"}, "doc": "Sets HTTP headers; replaces existing header fields."}, {"key": "delete", "value": {"type": "array", "elems": {"type": "string", "doc": "Names of HTTP header fields to delete."}}, "doc": "Names of HTTP header fields to delete."}, {"key": "replace", "value": {"type": "map", "map_keys": {"type": "string"}, "elems": {"type": "array", "elems": {"type": "struct", "type_name": "github.com/caddyserver/caddy/v2/modules/caddyhttp/headers.Replacement", "struct_fields": [{"key": "search", "value": {"type": "string", "doc": "The substring to search for."}, "doc": "The substring to search for."}, {"key": "search_regexp", "value": {"type": "string", "doc": "The regular expression to search with."}, "doc": "The regular expression to search with."}, {"key": "replace", "value": {"type": "string", "doc": "The string with which to replace matches."}, "doc": "The string with which to replace matches."}], "doc": "Replacement describes a string replacement,\neither a simple and fast substring search\nor a slower but more powerful regex search.\n"}, "doc": "Performs substring replacements of HTTP headers in-situ."}}, "doc": "Performs substring replacements of HTTP headers in-situ."}], "doc": "HeaderOps defines manipulations for HTTP headers.\n"}, "doc": "HeaderOps defines manipulations for HTTP headers.\n"}, {"key": "response", "value": {"type": "struct", "type_name": "github.com/caddyserver/caddy/v2/modules/caddyhttp/headers.RespHeaderOps", "struct_fields": [{"key": "add", "value": {"type": "map", "type_name": "net/http.Header", "map_keys": {"type": "string"}, "elems": {"type": "array", "elems": {"type": "string"}, "doc": "Adds HTTP headers; does not replace any existing header fields."}, "doc": "A Header represents the key-value pairs in an HTTP header.\n\nThe keys should be in canonical form, as returned by\nCanonicalHeaderKey.\n"}, "doc": "Adds HTTP headers; does not replace any existing header fields."}, {"key": "set", "value": {"type": "map", "type_name": "net/http.Header", "map_keys": {"type": "string"}, "elems": {"type": "array", "elems": {"type": "string"}, "doc": "Sets HTTP headers; replaces existing header fields."}, "doc": "A Header represents the key-value pairs in an HTTP header.\n\nThe keys should be in canonical form, as returned by\nCanonicalHeaderKey.\n"}, "doc": "Sets HTTP headers; replaces existing header fields."}, {"key": "delete", "value": {"type": "array", "elems": {"type": "string", "doc": "Names of HTTP header fields to delete."}}, "doc": "Names of HTTP header fields to delete."}, {"key": "replace", "value": {"type": "map", "map_keys": {"type": "string"}, "elems": {"type": "array", "elems": {"type": "struct", "type_name": "github.com/caddyserver/caddy/v2/modules/caddyhttp/headers.Replacement", "struct_fields": [{"key": "search", "value": {"type": "string", "doc": "The substring to search for."}, "doc": "The substring to search for."}, {"key": "search_regexp", "value": {"type": "string", "doc": "The regular expression to search with."}, "doc": "The regular expression to search with."}, {"key": "replace", "value": {"type": "string", "doc": "The string with which to replace matches."}, "doc": "The string with which to replace matches."}], "doc": "Replacement describes a string replacement,\neither a simple and fast substring search\nor a slower but more powerful regex search.\n"}, "doc": "Performs substring replacements of HTTP headers in-situ."}}, "doc": "Performs substring replacements of HTTP headers in-situ."}, {"key": "require", "value": {"type": "struct", "type_name": "github.com/caddyserver/caddy/v2/modules/caddyhttp.ResponseMatcher", "struct_fields": [{"key": "status_code", "value": {"type": "array", "elems": {"type": "int", "doc": "If set, one of these status codes would be required.\nA one-digit status can be used to represent all codes\nin that class (e.g. 3 for all 3xx codes)."}}, "doc": "If set, one of these status codes would be required.\nA one-digit status can be used to represent all codes\nin that class (e.g. 3 for all 3xx codes)."}, {"key": "headers", "value": {"type": "map", "type_name": "net/http.Header", "map_keys": {"type": "string"}, "elems": {"type": "array", "elems": {"type": "string"}, "doc": "If set, each header specified must be one of the\nspecified values, with the same logic used by the\nrequest header matcher."}, "doc": "A Header represents the key-value pairs in an HTTP header.\n\nThe keys should be in canonical form, as returned by\nCanonicalHeaderKey.\n"}, "doc": "If set, each header specified must be one of the\nspecified values, with the same logic used by the\nrequest header matcher."}], "doc": "If set, header operations will be deferred until\nthey are written out and only performed if the\nresponse matches these criteria.\n\n\nResponseMatcher is a type which can determine if an\nHTTP response matches some criteria."}, "doc": "If set, header operations will be deferred until\nthey are written out and only performed if the\nresponse matches these criteria.\n\n\nResponseMatcher is a type which can determine if an\nHTTP response matches some criteria."}, {"key": "deferred", "value": {"type": "bool", "doc": "If true, header operations will be deferred until\nthey are written out. Superceded if Require is set.\nUsually you will need to set this to true if any\nfields are being deleted."}, "doc": "If true, header operations will be deferred until\nthey are written out. Superceded if Require is set.\nUsually you will need to set this to true if any\nfields are being deleted."}], "doc": "RespHeaderOps defines manipulations for response headers.\n"}, "doc": "RespHeaderOps defines manipulations for response headers.\n"}], "doc": "Handler is a middleware which modifies request and response headers.\n\nChanges to headers are applied immediately, except for the response\nheaders when Deferred is true or when Required is set. In those cases,\nthe changes are applied when the headers are written to the response.\nNote that deferred changes do not take effect if an error occurs later\nin the middleware chain.\n\nProperties in this module accept placeholders.\n\nResponse header operations can be conditioned upon response status code\nand/or other header values.\n", "module_inline_key": "handler"}